"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8077],{"./src/stories/ui/atomic/molecules/AwardSelectEventModal/awardSelectEventModal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js"),ui__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../packages/ui/dist/index.mjs"),_data_awardsform_data__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/stories/ui/data/awardsform.data.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"ui/Atomic/Molecules/AwardSelectEventModal/AwardSelectEventModal",component:ui__WEBPACK_IMPORTED_MODULE_2__.AwardModal,tags:["ui","molecules","common"],parameters:{},argTypes:{}},Default={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"w-screen h-screen flex justify-center items-center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ui__WEBPACK_IMPORTED_MODULE_2__.AwardModal,{awardsForm:_data_awardsform_data__WEBPACK_IMPORTED_MODULE_1__.iE,language:"en",submitStep:async(answers,files,stepId,isSummary)=>(await new Promise((resolve=>{setTimeout(resolve,1e3)})),!0),questionnaire:_data_awardsform_data__WEBPACK_IMPORTED_MODULE_1__.x8,shouldShowStep:(step,data)=>{var _step_onlyShowWhen,_step_onlyShowWhen1;if((null===(_step_onlyShowWhen=step.onlyShowWhen)||void 0===_step_onlyShowWhen?void 0:_step_onlyShowWhen.questionName)&&(null===(_step_onlyShowWhen1=step.onlyShowWhen)||void 0===_step_onlyShowWhen1?void 0:_step_onlyShowWhen1.answerName)){var _step_onlyShowWhen2;const answerName=null===(_step_onlyShowWhen2=step.onlyShowWhen)||void 0===_step_onlyShowWhen2?void 0:_step_onlyShowWhen2.answerName,answers=data[step.onlyShowWhen.questionName];if(!answers)return!1;if(Array.isArray(answers))return answers.some((answer=>answer===answerName));if(!answers.includes(answerName))return!1}return!0}})}),args:{}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    const submitStep = async (answers: QuestionnaireResponseAnswer[], files: FileUploadQuestionWithAnswers[], stepId: string, isSummary: boolean): Promise<boolean> => {\n      await new Promise(resolve => {\n        setTimeout(resolve, 1000);\n      });\n      return true; //Return false if you want to test error messages\n    };\n    const shouldShowStep = (step: FormStep, data: FieldValues) => {\n      if (step.onlyShowWhen?.questionName && step.onlyShowWhen?.answerName) {\n        const answerName = step.onlyShowWhen?.answerName;\n        const answers = data[step.onlyShowWhen.questionName];\n        if (!answers) {\n          return false;\n        } else if (Array.isArray(answers)) {\n          return answers.some(answer => answer === answerName);\n        } else if (!answers.includes(answerName)) {\n          return false;\n        }\n      }\n      return true;\n    };\n    return <div className="w-screen h-screen flex justify-center items-center">\r\n          <AwardModal awardsForm={AwardsFormStructureData} language={"en"} submitStep={submitStep} questionnaire={QuestionnaireData} shouldShowStep={shouldShowStep}>          \r\n          </AwardModal>\r\n      </div>;\n  },\n  args: {}\n}',...Default.parameters?.docs?.source}}}}}]);